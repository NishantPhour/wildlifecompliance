# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-05-11 04:18
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import smart_selects.db_fields


class Migration(migrations.Migration):

    dependencies = [
        ('wildlifecompliance', '0534_licencepurpose_replaced_by'),
    ]

    operations = [
        migrations.CreateModel(
            name='LicencePurposeSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=100)),
                ('section_label', models.CharField(max_length=100)),
                ('index', models.IntegerField(blank=True, default=0)),
                ('licence_purpose', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='sections', to='wildlifecompliance.LicencePurpose')),
            ],
            options={
                'verbose_name': 'Schema Licence Purpose Section',
            },
        ),
        migrations.CreateModel(
            name='MasterlistQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('question', models.TextField()),
                ('answer_type', models.CharField(choices=[('text', 'Text'), ('radiobuttons', 'Radio button'), ('checkbox', 'Checkbox'), ('number', 'Number'), ('email', 'Email'), ('select', 'Select'), ('multi-select', 'Multi-select'), ('text_area', 'Text area'), ('label', 'Label'), ('declaration', 'Declaration'), ('file', 'File'), ('date', 'Date')], default='text', max_length=40, verbose_name='Answer Type')),
            ],
            options={
                'verbose_name': 'Schema Masterlist Question',
            },
        ),
        migrations.CreateModel(
            name='QuestionOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100, unique=True)),
                ('value', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Schema Question Option',
            },
        ),
        migrations.CreateModel(
            name='SectionQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('isCopiedToPermit', 'isCopiedToPermit'), ('isRequired', 'isRequired'), ('canBeEditedByAssessor', 'canBeEditedByAssessor'), ('isRepeatable', 'isRepeatable')], max_length=400, null=True)),
                ('order', models.PositiveIntegerField(default=1)),
                ('parent_answer', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='parent_question', chained_model_field='masterlistquestion', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='options', to='wildlifecompliance.QuestionOption')),
                ('parent_question', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field='section', chained_model_field='question_sections__section', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='children_question', to='wildlifecompliance.MasterlistQuestion')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='question_sections', to='wildlifecompliance.MasterlistQuestion')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='section_questions', to='wildlifecompliance.LicencePurposeSection')),
            ],
            options={
                'verbose_name': 'Schema Section Question',
            },
        ),
        migrations.AddField(
            model_name='masterlistquestion',
            name='option',
            field=models.ManyToManyField(blank=True, to='wildlifecompliance.QuestionOption'),
        ),
    ]
